# combine data frames
df <- rbind(df_priori, df_posteriori)
df
df_priori
df_posteriori
# create plot using ggplot
ggplot() +
geom_line(aes(color = "Piori"), size = 1.5, data = df_priori) +
geom_line(aes(color = "Posteriori"), size = 1.5, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Density Functions", x = "x", y = "Density", color = "Distribution") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
# create plot using ggplot
ggplot() +
geom_line(aes(x =x, y = y, color = "Piori"), size = 1.5, data = df_priori) +
geom_line(aes(x =x, y = y, color = "Posteriori"), size = 1.5, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Density Functions", x = "x", y = "Density", color = "Distribution") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
df_posteriori
df_priori
df_posteriori
y_dgamma <- dgamma(x, shape = 7, rate = 3.85)
df_posteriori <- data.frame(x = x, y = y)
# combine data frames
df <- rbind(df_priori, df_posteriori)
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.5, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.5, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Density Functions", x = "x", y = "Density", color = "Distribution") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
df_posteriori
df_posteriori <- data.frame(x = x, y = y_dgamma)
# combine data frames
df <- rbind(df_priori, df_posteriori)
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.5, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.5, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Density Functions", x = "x", y = "Density", color = "Distribution") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 8), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Density Functions", x = "x", y = "Density", color = "Distribution") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.3, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.3, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 8), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Funções de densidade", x = "Valores de x", y = "Densidade", color = "Distribuição") +
theme_classic() +
theme(panel.background = element_rect(fill = "#F8766D", alpha = 0.2), plot.title = element_text(hjust = 0.5))
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.3, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.3, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 8), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Funções de densidade", x = "Valores de x", y = "Densidade", color = "Distribuição") +
theme_classic() +
theme(panel.background = element_rect(fill = "#F8766D"), plot.title = element_text(hjust = 0.5))
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.3, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.3, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 8), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Funções de densidade", x = "Valores de x", y = "Densidade", color = "Distribuição") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
y_dgamma <- dgamma(x, shape = 7, rate = 1/3.85)
df_posteriori <- data.frame(x = x, y = y_dgamma)
# combine data frames
df <- rbind(df_priori, df_posteriori)
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.3, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.3, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 8), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Funções de densidade", x = "Valores de x", y = "Densidade", color = "Distribuição") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
y_dgamma <- dgamma(x, shape = 7, rate = 3.85)
df_posteriori <- data.frame(x = x, y = y_dgamma)
# combine data frames
df <- rbind(df_priori, df_posteriori)
# create plot using ggplot
ggplot() +
geom_line(aes(x = x, y = y, color = "Piori"), size = 1.3, data = df_priori) +
geom_line(aes(x = x, y = y, color = "Posteriori"), size = 1.3, data = df_posteriori) +
scale_color_manual(values = c("darkblue", "darkgreen")) +
scale_x_continuous(limits = c(0, 8), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(title = "Funções de densidade", x = "Valores de x", y = "Densidade", color = "Distribuição") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
library(TeachingDemos)
set.seed(1)
theta = rgamma(n=5,shape = 7, rate = 3.85)
emp.hpd(theta, conf=.95)
theta = rgamma(n=5,shape = 7, rate = 3.85)
theta
emp.hpd(theta, conf=.95)
a = 7
b = 3.85
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
paste("t1 = ", round(t1, 3), "t2 = ", round(t2, 3))
t2 - t1
plot(dados)
7/3.85
lambda_estimado = 7/3.85
mean(dados)
var(dados)
amostra <- rexp(n = 10, rate = 2)
amostra
hist(amostra)
amostra <- rexp(n = 50, rate = 2)
hist(amostra)
amostra <- rexp(n = 100, rate = 2)
hist(amostra)
amostra <- rexp(n = 1000000, rate = 2)
hist(amostra)
amostra <- rexp(n = 100, rate = 2)
hist(amostra)
amostra <- rexp(n = 100, rate = 2)
hist(amostra)
curve(dexp(x, rate = 2), col = "blue", add = TRUE)
curve(dexp(x, rate = 0.5), col = "blue", add = TRUE)
amostra <- rexp(n = 100, rate = 0.5)
hist(amostra, freq = FALSE, main = "Histograma da amostra",
xlab = "Valores da amostra", ylab = "Densidade")
curve(dexp(x, rate = 0.5), col = "blue", add = TRUE)
amostra <- rexp(n = 100, rate = 2)
hist(amostra, freq = FALSE, main = "Histograma da amostra",
xlab = "Valores da amostra", ylab = "Densidade")
curve(dexp(x, rate = 2), col = "blue", add = TRUE)
amostra <- rexp(n = 1000, rate = 2)
hist(amostra, freq = FALSE, main = "Histograma da amostra",
xlab = "Valores da amostra", ylab = "Densidade")
curve(dexp(x, rate = 2), col = "blue", add = TRUE)
sum(amostra)
length(amostra)
a = 7
b = 3.85
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
paste("t1 = ", round(t1, 3), "t2 = ", round(t2, 3))
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
paste("t1 = ", round(t1, 3), "t2 = ", round(t2, 3))
amostra <- rexp(n = 100, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
paste("t1 = ", round(t1, 3), "t2 = ", round(t2, 3))
paste("Para uma amostra com n = ", length(amostra), " temos: \nt1 = ", round(t1, 3), "t2 = ", round(t2, 3))
paste("Para uma amostra com n = ", length(amostra), " temos, t1 = ", round(t1, 3), "t2 = ", round(t2, 3))
paste("Para uma amostra com n = ", length(amostra), "temos, t1 = ", round(t1, 3), "t2 = ", round(t2, 3))
print(paste("Para uma amostra com n = ", length(amostra), "temos, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
print(paste("Para uma amostra com n = ", length(amostra), "temos \n, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
n = c(10, 20, 50, 100)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
}
for (i in 1:length(n)) {
testa_amostras(n[i])
}
n = c(10, 20, 50, 100)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
}
for (i in 1:length(n)) {
testa_amostras(n[i])
}
n = seq(0, 1000, by = 1)
n
n = seq(0, 10, by = 1)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c()
for (i in 1:length(n)) {
testa_amostras(n[i])
append(diffs, testa_amostras(n[i]))
}
diifs
diffs
n = seq(0, 10, by = 1)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c(0)
for (i in 1:length(n)) {
testa_amostras(n[i])
append(diffs, testa_amostras(n[i]))
}
diifs
diffs
n = seq(0, 10, by = 1)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c(0)
for (i in 1:length(n)) {
testa_amostras(n[i])
diffs <- append(diffs, testa_amostras(n[i]))
}
diffs
n = seq(0, 10, by = 1)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c()
for (i in 1:length(n)) {
testa_amostras(n[i])
diffs <- append(diffs, testa_amostras(n[i]))
}
n = seq(0, 1000, by = 1)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c()
for (i in 1:length(n)) {
testa_amostras(n[i])
diffs <- append(diffs, testa_amostras(n[i]))
}
plot(n, diffs)
n = seq(0, 1000, by = 1)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c()
for (i in 1:length(n)) {
diffs <- append(diffs, testa_amostras(n[i]))
}
plot(n, diffs)
plot(n, diffs, type = "l")
plot(n, diffs)
n = seq(0, 1000, by = 5)
set.seed(334441)
testa_amostras <- function(n) {
amostra <- rexp(n = n, rate = 2)
a = 1 + length(amostra)
b = 1 + sum(amostra)
y = dgamma(x, a, b)
t1 = qgamma(0.025, a, b)
t2 = qgamma(0.975, a, b)
print(paste("Para uma amostra com n = ", length(amostra), "temos com 5% de significancia, t1 = ", round(t1, 3), "t2 = ", round(t2, 3)))
return(t2 - t1)
}
diffs <- c()
for (i in 1:length(n)) {
diffs <- append(diffs, testa_amostras(n[i]))
}
plot(n, diffs)
getwd)_
getwd()
setwd("D:\github\ufrgs\generalized_linear_models")
D:/github/ufrgs/generalized_linear_models
setwd("D:/github/ufrgs/generalized_linear_models")
setwd("D:/github/ufrgs/generalized_linear_models")
df
df
df <- read.csv("lista_1/data/Supermercados.csv")
View(df)
df <- read.csv("lista_1/data/Supermercados.csv")
df <- read.csv("lista_1/data/Supermercados.csv", sep = ";")
df
df1 <- read.csv("lista_1/data/Supermercados.csv", sep = ";", encoding = "UTF-8")
df1 <- read.csv("lista_1/data/Supermercados.csv", sep = ",", encoding = "UTF-8")
df1 <- read.csv2("lista_1/data/Supermercados.csv", sep = ",", encoding = "UTF-8", dec=".")
df1 <- read.csv2("lista_1/data/Supermercados.csv", sep = ",", encoding = "UTF-8", dec=".")
df1
df1.columns
colnames(df1)
install.packages(glue)
install.packages("glue"")
sdassd
asd
sa
das
a23\1
312
asdcxz\
xc
zxcxzc[]
)
~~
""
install.package("glue")
install.packages("glue")
# install.package("glue")
library(glue)
# install.package("glue")
library(glue)
setwd("D:/github/ufrgs/generalized_linear_models")
df <- read.csv2("lista_1/data/Supermercados.csv", sep = ",", encoding = "UTF-8")
df
colnames(df)
df$Dist.ncia.describe()
describe(df$)
describe(df$Dist.ncia)
if(!require('psych')) {
install.packages('psych')
library('psych')
}
setwd("D:/github/ufrgs/generalized_linear_models")
if(!require('glue')) {
install.packages('glue')
library('glue')
}
setwd("D:/github/ufrgs/generalized_linear_models")
if(!require('glue')) {
install.packages('glue')
install.packages('psych')
library('glue')
library('psych')
}
setwd("D:/github/ufrgs/generalized_linear_models")
```{r}
describe(df$Dist.ncia)
describe(numeric_cols)
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
descritiva_basicos <- function(var) {
print("Média")
}
describe(numeric_cols)
}
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
for (i in 1:length(numeric_cols) {
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
for (i in 1:length(numeric_cols) {
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
for (i in 1:length(numeric_cols)) {
print(i)
}
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
for (i in 1:length(numeric_cols)) {
psych::describe(numeric_cols[i])
}
numeric_cols[i]
numeric_cols[0]
numeric_cols[1]
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
for (i in 1:length(numeric_cols)) {
psych::describe(data = df, numeric_cols[i])
}
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
for (i in 1:length(numeric_cols)) {
psych::describe(df$numeric_cols[i])
}
length(numeric_cols)
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
df_descritivas <- function(numeric_cols, dataframe) {
v <- c()
for (i in 1:length(numeric_cols)) {
v[1] = mean(dataframe$numeric_cols[i])
}
}
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
df_descritivas <- function(numeric_cols, dataframe) {
v <- c()
for (i in 1:length(numeric_cols)) {
v[1] = mean(dataframe$numeric_cols[i])
}
}
return(v)
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
v <- c()
df_descritivas <- function(numeric_cols, dataframe) {
v <- c()
for (i in 1:length(numeric_cols)) {
v[1] = mean(dataframe$numeric_cols[i])
}
}
return(v)
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
v <- c()
df_descritivas <- function(numeric_cols, dataframe) {
for (i in 1:length(numeric_cols)) {
v[1] = mean(dataframe$numeric_cols[i])
}
return(v)
}
df_descritivas(numeric_cols, df)
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
df_descritivas <- function(numeric_cols, dataframe) {
for (i in 1:length(numeric_cols)) {
v[1] = mean(dataframe$numeric_cols[i])
}
return(v)
}
df_descritivas(numeric_cols, df)
numeric_cols <- c("Dist.ncia", "Npessoas", "Gasto")
df_descritivas <- function(numeric_cols, dataframe) {
for (i in 1:length(numeric_cols)) {
print(dataframe$numeric_cols[i])
v[1] = mean(dataframe$numeric_cols[i])
}
return(v)
}
df_descritivas(numeric_cols, df)
df$Dist.ncia
numeric_cols[1]
df$numeric_cols[1]
df$"numeric_cols[1]"
numeric_cols <- c(Dist.ncia, "Npessoas", "Gasto")
sapply(df$Dist.ncia, mean)
sapply(df, mean)
df.info
df.info()
info(df)
nums <- unlist(lapply(x, is.numeric), use.names = FALSE)
nums <- unlist(lapply(df, is.numeric), use.names = FALSE)
nums
